# Generated by Django 4.2.5 on 2023-09-29 03:40

from django.db import migrations, models
from django.contrib.auth.models import User
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType

def create_custom_permission(codename, name, content_type):
    try:
        permission = Permission.objects.get(codename=codename, content_type=content_type)
    except Permission.DoesNotExist:
        permission = Permission.objects.create(codename=codename, name=name, content_type=content_type)
    return permission

# Define a content type for the model
content_type_model_user = ContentType.objects.get_for_model(User)

# Create custom permissions if they don't exist
permission1 = create_custom_permission('view', 'Can view user', content_type_model_user)
permission2 = create_custom_permission('recommend', 'Can recommend user', content_type_model_user)
permission3 = create_custom_permission('edit', 'Can edit user', content_type_model_user)

# Create groups
student_group, created1 = Group.objects.get_or_create(name='student')
teacher_group, created2 = Group.objects.get_or_create(name='teacher')
admin_group, created3 = Group.objects.get_or_create(name='admin')

# Assign permissions to groups
student_group.permissions.add(permission1)
teacher_group.permissions.add(permission1, permission2)
admin_group.permissions.add(permission1, permission2, permission3)

class Migration(migrations.Migration):
    initial = True
    dependencies = []

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('author', models.CharField(max_length=100)),
                ('isbn', models.CharField(max_length=20)),
                ('year', models.CharField(max_length=4)),
                ('publisher', models.CharField(max_length=100)),
                ('copies', models.IntegerField()),
                ('available', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20)),
                ('password', models.CharField(max_length=20)),
                ('name', models.CharField(max_length=40)),
                ('email', models.EmailField(max_length=254)),
                ('user_type', models.CharField(max_length=10)),
            ],
        ),
    ]
